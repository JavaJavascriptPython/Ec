for day in $(seq -w 1 15); do
  file="Transaction.202507${day}.gz"
  if [[ -f "$file" ]]; then
    echo "Processing file: $file"    # ✅ This prints the filename
    zcat "$file" | awk '$5 ~ /^[0-9]{5}$/ { print $5 }'
  else
    echo "File not found: $file"     # Optional: show missing files
  fi
done




output_file="filtered_output.txt"
> "$output_file"  # Clear the file if it exists

for day in $(seq -w 1 15); do
  file="Transaction.202507${day}.gz"
  if [[ -f "$file" ]]; then
    echo "Processing file: $file"        # ✅ Show progress on terminal
    zcat "$file" | awk '$5 ~ /^[0-9]{5}$/ { print $5 }' >> "$output_file"
  else
    echo "File not found: $file"         # Optional: show if file is missing
  fi
done



awk '
FNR==NR { map[$1] = $2; next }
$5 in map { print $0, map[$5] }
' mapping_file.txt main_file.txt > output.txt




#!/usr/bin/perl
use strict;
use warnings;

# Hash to store code => name
my %code_map;

# Read mapping file
open my $map_fh, '<', 'mapping_file.txt' or die "Cannot open mapping_file.txt: $!";
while (<$map_fh>) {
    chomp;
    my ($code, $name) = split(/\s+/, $_, 2);
    $code_map{$code} = $name;
}
close $map_fh;

# Process main file
open my $main_fh, '<', 'main_file.txt' or die "Cannot open main_file.txt: $!";
open my $out_fh, '>', 'output.txt' or die "Cannot write to output.txt: $!";
while (<$main_fh>) {
    chomp;
    my @fields = split(/\s+/, $_);
    my $txn_code = $fields[4];  # 5th column (0-based index)
    if (defined $code_map{$txn_code}) {
        print $out_fh "$_ $code_map{$txn_code}\n";
    }
}
close $main_fh;
close $out_fh;

print "Mapping complete. Output written to output.txt\n";